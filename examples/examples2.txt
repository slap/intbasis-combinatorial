cd c:/Users/slapl/Dropbox/repos/intbasis/LIBCode/optimization
cd c:/Users/Usuario/Dropbox/repos/intbasis/LIBCode/optimization

LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y3+x2)*(y2-x3)+y6;
integralBasis(f,2);
PuiseuxList(f);


/////////////

LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+3x3y + x4)*(y^7 + 6x4y3 + 2xy + x7)*(y5+7xy-4x2)*(y3+x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"Optimization: ", timer - t;
t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"Chinese remainder: ", timer - t;

reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

/////////////

LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y4+ x4)*(y^7 + 2xy + x2)*(y5+7x3)*(y3+x2)*(y3-x2)*(y2-x3)+y30;
int t = timer;
list l1 = integralBasis(f,2, "atOrigin");
"Optimization: ", timer - t;
t = timer;
list l2 = integralBasis(f,2, "atOrigin", "noOpti");
"Chinese remainder: ", timer - t;

reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));



