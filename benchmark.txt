cd C:/Users/Santiago/Dropbox/Research/Proyectos/2023-puiseuxOneRep/original
cd C:/Users/Santiago/Dropbox/Research/Proyectos/2022-intBas-combinatorial/original

cd C:/Users/Santiago/Documents/GitHub/Singular/Singular/LIB


////////////////////////////////////////////////////////////////////////
// Example 1 - Two branches (example from Van Hoeij)
////////////////////////////////////////////////////////////////////////
// Opti: 0 seconds
// No opti: 0 seconds
// Maple: 8 seconds
printlevel = 2;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

// MAPLE

restart();
with(algcurves);
st := time();
f := (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^100;
st := time();
intBasis := integral_basis(f, x, y, {x});
time()-st;

////////////////////////////////////////////////////////////////////////
// Example 2 - Three branches (one more branch to the previous example)
////////////////////////////////////////////////////////////////////////
// Opti: 0 seconds
// No opti: infinity
// Maple: 36 seconds
printlevel = 5;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

// MAPLE

with(algcurves);
st := time();
f := (y^15 + 2*x^38)*(y^19 + 7*x^52)*(y^7+3*x^2) + y^100;
st := time();
intBasis := integral_basis(f, x, y, {x});
time()-st;


puiseux(f,X=0,Y,0)

////////////////////////////////////////////////////////////////////////
// Example 3 - Five branches (more branches added to the previous example)
////////////////////////////////////////////////////////////////////////
// Opti: 4 seconds
// No opti: 3762
// Maple: 13 seconds

printlevel = 5;
LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^7)*(y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x6*y6+x^12) + y^60;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

restart;
with(algcurves);
f := (y^15 + 2*x^7)*(y^15 + 2*x^8)*(y^9 + 7*x^2)*(y^7+3*x^2)*(y^11+7*x^6*y^6+x^12) + y^60;
st := time();
intBasis := integral_basis(f, x, y, {x});
time() - st;

////////////////////////////////////////////////////////////////////////
// Example 4 - Two branches in the same Puiseux block
// Computation was wrong in previous version.
////////////////////////////////////////////////////////////////////////
// Opti: 0 seconds
// No opti: 8 sec
// Maple: 0.156 sec

printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

restart;
with(algcurves);
f := (y^7 + x^4) * (y^7 + y^5*x^3 + x^4)+y^30;
st := time();
intBasis := integral_basis(f, x, y, {x});
time() - st;



////////////////////////////////////////////////////////////////////////
// Example 5 - Similar as previous example, but now it is only one 
// branch
////////////////////////////////////////////////////////////////////////
// Opti: 0 seconds
// No opti: 0 sec
// Maple: 0.031 sec

printlevel = 5;
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
poly f = (y7 + x4) * (y7 + y5x3 + x4) + y16;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

restart;
with(algcurves);
f := (y^7 + x^4) * (y^7 + y^5*x^3 + x^4)+y^16;
st := time();
intBasis := integral_basis(f, x, y, {x});
time() - st;


////////////////////////////////////////////////////////////////////////
// Example 6 - Examples from the intbas paper
////////////////////////////////////////////////////////////////////////
// Opti: 0 seconds
// No opti: 0 sec
// Maple: 0.031 sec

LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = y^2 + x^(k+1) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

// Opti: 1 seconds
// No opti: 1 sec
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 400; int d = 500;
poly f = x*(x^(k-1) + y^2) + y^d;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

// Multiple point at the origin
// Opti: 0 seconds
// No opti: 2 sec
LIB"integralbasis.lib";
ring r = 0, (x,y), dp;
int k = 50;
int d = 70;
poly f = polyDK(d, k, 1231);
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));


////////////////////////////////////////////////////////////////////////

// Conjugated singularities, the combinatorial approach is only used
// for rational singularities
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 6;
poly z = 2*x - y + 1;
poly f = (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));

restart;
with(algcurves);
k := 4;
z := 2*x - y + 1;
f := (x^(k+1) + y^(k+1) + z^(k+1))^2 - 4*(x^(k+1)*y^(k+1) + y^(k+1)*z^(k+1) + z^(k+1)*x^(k+1));
st := time();
intBasis := integral_basis(f, x, y);
time() - st;

printlevel = 4;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
int k = 5;
poly z = x - 2*y + 1;
poly f = x^(2*k) + y^(2*k) + z^(2*k) + 2 * (x^k * z^k - x^k * y^k + y^k * z^k);
f = monic(f);
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;
reduce(l1[1], groebner(l2[1]));
reduce(l2[1], groebner(l1[1]));


// ----------------------------------------------------------------------------
// Example 2 - Pfister

// Opti: 0 seconds
// No opti: 0 sec
// Maple: 0.031 sec

LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^4 + 2*x^3*y^2 + x^6 + x^5*y)^3 + x^11*y^11;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

list l = integralBasis(f, 2, "nonModular");

// ----------------------------------------------------------------------------
// Example 3
// One singularity at the origin with m = 26 and delta = 523.

// Opti: 1 seconds
// No opti: 4 sec

LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^5 + y^4*x^7 + 2*x^8) * (y^3 + 7*x^4) * (y^7 + 2*x^12) * (y^11 + 2*x^18) + y^30;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

// Verification does not finish
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));


// ----------------------------------------------------------------------------
// Example 4
// One singularity at the origin with m = 34 and delta = 1440.

// Wrong output for optimization, check!

// Opti: 0 seconds
// No opti: 0 sec

LIB"integralbasis.lib";
ring r = 0,(x,y),(dp, L(100000));
poly f = (y^15 + 2*x^38)*(y^19 + 7*x^52) + y^36;
int t = timer;
list l1 = integralBasis(f, 2);
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "noOpti");
timer - t;

size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

printlevel = 4;
LIB"integralbasis.lib";
ring r = 0,(x,y),dp;
poly f = (y^35 + y^34*x^7 + 2*x^38) * (y^33 + 7*x^44) * (y^37 + 2*x^52) + y^110;
int t = timer;
list l1 = integralBasis(f, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(f, 2, "atOrigin", "noOpti");
timer - t;

"Verification...";
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));



////////////////////////////////////////////
// Slow example by Magdaleen

printlevel = 3;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly f = x^(30)+x^2*y^2+y^(11);
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly g =phi(f);
int t = timer;
list l1 = integralBasis(g, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(g, 2, "atOrigin", "noOpti");
timer - t;

# Maple
with(algcurves);
f1 := XX^(30)+XX^2*YY^2+YY^(11);
f := eval(f1, {XX = x+2*y+x^2+x*y+y^2+x^3, YY = 3*x+5*y+x^2*y+y^2});
intBasis := integral_basis(f, x, y, {x});


// Polynomials with all coefficients set to 1 - no transformation - very fast
printlevel = 5;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
int t = timer;
list l1 = integralBasis(h, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(h, 2, "atOrigin", "noOpti");
timer - t;

"Verification...";
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));

// Polynomials with all coefficients set to 1 - transformed - Puiseux are slow

printlevel = 5;
LIB"integralbasis.lib";
ring R = 0,(x,y),dp;
poly h = x31+x30y+x29y2+x28y3+x27y4+x26y5+x25y6+x24y7+x23y8+x22y9+x21y10+x20y11+x19y12+x18y13+x17y14+x16y15+x15y16+x14y17+x13y18+x12y19+x11y20+x10y21+x9y22+x8y23+x7y24+x6y25+x5y26+x4y27+x3y28+x2y29+xy30+y31+x30+x29y+x28y2+x27y3+x26y4+x25y5+x24y6+x23y7+x22y8+x21y9+x20y10+x19y11+x18y12+x17y13+x16y14+x15y15+x14y16+x13y17+x12y18+x11y19+x10y20+x9y21+x8y22+x7y23+x6y24+x5y25+x4y26+x3y27+x2y28+xy29+y30+x29+x28y+x27y2+x26y3+x25y4+x24y5+x23y6+x22y7+x21y8+x20y9+x19y10+x18y11+x17y12+x16y13+x15y14+x14y15+x13y16+x12y17+x11y18+x10y19+x9y20+x8y21+x7y22+x6y23+x5y24+x4y25+x3y26+x2y27+xy28+x28+x27y+x26y2+x25y3+x24y4+x23y5+x22y6+x21y7+x20y8+x19y9+x18y10+x17y11+x16y12+x15y13+x14y14+x13y15+x12y16+x11y17+x10y18+x9y19+x8y20+x7y21+x6y22+x5y23+x4y24+x3y25+x2y26+xy27+x27+x26y+x25y2+x24y3+x23y4+x22y5+x21y6+x20y7+x19y8+x18y9+x17y10+x16y11+x15y12+x14y13+x13y14+x12y15+x11y16+x10y17+x9y18+x8y19+x7y20+x6y21+x5y22+x4y23+x3y24+x2y25+xy26+x26+x25y+x24y2+x23y3+x22y4+x21y5+x20y6+x19y7+x18y8+x17y9+x16y10+x15y11+x14y12+x13y13+x12y14+x11y15+x10y16+x9y17+x8y18+x7y19+x6y20+x5y21+x4y22+x3y23+x2y24+xy25+x25+x24y+x23y2+x22y3+x21y4+x20y5+x19y6+x18y7+x17y8+x16y9+x15y10+x14y11+x13y12+x12y13+x11y14+x10y15+x9y16+x8y17+x7y18+x6y19+x5y20+x4y21+x3y22+x2y23+xy24+x24+x23y+x22y2+x21y3+x20y4+x19y5+x18y6+x17y7+x16y8+x15y9+x14y10+x13y11+x12y12+x11y13+x10y14+x9y15+x8y16+x7y17+x6y18+x5y19+x4y20+x3y21+x2y22+xy23+x23+x22y+x21y2+x20y3+x19y4+x18y5+x17y6+x16y7+x15y8+x14y9+x13y10+x12y11+x11y12+x10y13+x9y14+x8y15+x7y16+x6y17+x5y18+x4y19+x3y20+x2y21+xy22+x22+x21y+x20y2+x19y3+x18y4+x17y5+x16y6+x15y7+x14y8+x13y9+x12y10+x11y11+x10y12+x9y13+x8y14+x7y15+x6y16+x5y17+x4y18+x3y19+x2y20+xy21+x21+x20y+x19y2+x18y3+x17y4+x16y5+x15y6+x14y7+x13y8+x12y9+x11y10+x10y11+x9y12+x8y13+x7y14+x6y15+x5y16+x4y17+x3y18+x2y19+xy20+x20+x19y+x18y2+x17y3+x16y4+x15y5+x14y6+x13y7+x12y8+x11y9+x10y10+x9y11+x8y12+x7y13+x6y14+x5y15+x4y16+x3y17+x2y18+xy19+x19+x18y+x17y2+x16y3+x15y4+x14y5+x13y6+x12y7+x11y8+x10y9+x9y10+x8y11+x7y12+x6y13+x5y14+x4y15+x3y16+x2y17+xy18+x18+x17y+x16y2+x15y3+x14y4+x13y5+x12y6+x11y7+x10y8+x9y9+x8y10+x7y11+x6y12+x5y13+x4y14+x3y15+x2y16+xy17+x17+x16y+x15y2+x14y3+x13y4+x12y5+x11y6+x10y7+x9y8+x8y9+x7y10+x6y11+x5y12+x4y13+x3y14+x2y15+xy16+x16+x15y+x14y2+x13y3+x12y4+x11y5+x10y6+x9y7+x8y8+x7y9+x6y10+x5y11+x4y12+x3y13+x2y14+x15+x14y+x13y2+x12y3+x11y4+x10y5+x9y6+x8y7+x7y8+x6y9+x5y10+x4y11+x3y12+x2y13+x14+x13y+x12y2+x11y3+x10y4+x9y5+x8y6+x7y7+x6y8+x5y9+x4y10+x3y11+x2y12+x13+x12y+x11y2+x10y3+x9y4+x8y5+x7y6+x6y7+x5y8+x4y9+x3y10+x2y11+x12+x11y+x10y2+x9y3+x8y4+x7y5+x6y6+x5y7+x4y8+x3y9+x2y10+x11+x10y+x9y2+x8y3+x7y4+x6y5+x5y6+x4y7+x3y8+x2y9+x9y+x8y2+x7y3+x6y4+x5y5+x4y6+x3y7+x2y8+x8y+x7y2+x6y3+x5y4+x4y5+x3y6+x2y7+x7y+x6y2+x5y3+x4y4+x3y5+x2y6+x5y2+x4y3+x3y4+x2y5+x4y2+x3y3+x2y4+x3y2+x2y3+x2y2;
map phi = R,x+2*y+x^2+x*y+y^2+x^3,3*x+5*y+x^2*y+y^2;
poly h2 = phi(h);
h2 = monic(h2);
int t = timer;
list l1 = integralBasis(h2, 2, "atOrigin");
timer - t;
t = timer;
list l2 = integralBasis(h2, 2, "atOrigin", "noOpti");
timer - t;

"Verification...";
size(reduce(l1[1], groebner(l2[1])));
size(reduce(l2[1], groebner(l1[1])));


